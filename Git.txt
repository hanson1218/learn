问题：
1.SSL certificate problem: unable to get local issuer certificate
solution:git config --global http.sslVerify false

2. push.default is unset
‘matching’ 参数是 Git 1.x 的默认行为，其意是如果你执行 git push 但没有指定分支，它将 push 所有你本地的分支到远程仓库中对应匹配的分支。
而 Git 2.x 默认的是 simple，意味着执行 git push 没有指定分支时，只有当前分支会被 push 到你使用 git pull 获取的代码。
git config --global push.default simple/matching
3.git 记住账号密码
在%HOME%目录中，一般为C:\users\Administrator，执行：
    touch .git-credentials
    vim .git-credentials
    https://{username}:{password}@github.com
然后在git项目下执行：
git config --global credential.helper store
重启github

fatal: Could not read from remote repository.
使用ssh下载

git config --list:查看配置
git config user.name：查看用户名
git config user.email：查看邮箱
git config --global user.name "username"
git config --global user.email "user.email"

git add <file>
git commit -m''
git push
git reset --hard HEAD^(上一个版本)
git reset --hard 23dsff(version)
git reflog  记录所有用过的命令
git 缓存区 add 将修改放到缓存区，commit 将缓存区修改提交到分支（如果修改没有add,直接commit,分支代码不会变）

git checkout -- file可以丢弃工作区的修改：其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”

	命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令

git reset HEAD file可以把暂存区（commit之前）的修改撤销掉（unstage），重新放回工作区


git   rm 用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。


建立远程仓库：
			echo "# learn" >> README.md
			git init
			git add README.md
			git commit -m "first commit"
			git remote add origin https://github.com/hanson1218/learn.git
			git push -u origin master  -u(本地仓库和远程建立关联)
			
			
git diff    #是工作区(work dict)和暂存区(stage)的比较
git diff --cached    #是暂存区(stage)和分支(master)的比较